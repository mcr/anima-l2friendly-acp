---
title: Autonomic Control Plane challenges for Layer-Two Switched Networks
abbrev: l2-friendly-acp
docname: draft-richardson-anima-l2-friendly-acp-00

# stand_alone: true

ipr: trust200902
area: Internet
wg: anima Working Group
kw: Internet-Draft
cat: std

pi:    # can use array (if all yes) or hash here
  toc: yes
  sortrefs:   # defaults to yes
  symrefs: yes

author:

- ins: M. Richardson
  name: Michael Richardson
  org: Sandelman Software Works
  email: mcr+ietf@sandelman.ca
- ins: J. Yang
  name: Jie Yang
  org: Huawei Technologies Co., Ltd.
  email: jay.yang@huawei.com

normative:
  RFC8174: BCP14
  RFC7042:
  I-D.ietf-anima-autonomic-control-plane: ACP
  RFC8138:

informative:
  RFC8368:

--- abstract

This document details the challenges with building an Autonomic Control Plane on
Campus/Enterprise networks which are built out of layer-two (Ethernet) switched technologies.

This document does not propose a specific solution as yet, but details a number of possibilities, and what it would take to standardize each possibility.

--- middle

# Introduction

The creation and maintenance of the Autonomic Control Plane described in
{{-ACP}} requires creation of hop-by-hop discovery of adjacent systems.
There are Campus L2 systems that are not broadcast safe until they have been
connected to their Software Defined Networking (SDN) controller.
The use of the stable connectivity provided by {{RFC8368}} can provide the
SDN connectivity required.

There is a bootstrap interlocking problem: the network may be unsafe for ACP discovery
broadcasts without the support of Spanning Tree Protocol (STP) or similar mechanisms
until configured, yet it can not be automatically configured until
the ACP discovery (and onboarding process) is done. Meantime, because of STP complicated topological
calculations, the convergence can be very slow for larger networks.
This can delay on-boarding.

In addition, forming a campus-wide network by default and using enabling STP does not work.
STP is not secure and could be easily spoofed by malicious or untrusted devices.
On manually configured networks today, STP is turned off on "access" ports, and enabled only for trunk ports.  But in an autonomic network, it is not possible to know a-priori which ports will be trunk ports.

What is needed is a way to send IPv6 traffic between these L2 switching devices in a way that is never  forwarded, regardless of how the network is eventually configured.
This is not just an inital configuration problem: devices may be added and removed at any time, due to needed expansion of capacity, planned upgrades, or devices failures.

A previous version of this document had proposed to do this with LLDP, but this was an inappropriate use of LLDP.
An analysis of switching fabric options revealed that there were also no particularly advantage to this "hack", as it did not save any fabric resources.

What is desired is another encapsulation that has the same forwarding properties as LLDP.

It is noted that EAPoL (Ethernet Type 0x888e) also has the desired properties.

The ISIS routing protocol also uses a specific EtherType, and some implementations have the desired property of never forwarding.

## Terminology

{::boilerplate bcp14}

# Functional Requirements

1. The encapsulation should be capable of transferring full-size (1280 byte) IPv6 packets.

2. The encapsulation should not be confused with standard unicase IPv6 Ethernet encapsulation using EtherType 0x86DD.

3. Even when in a very primitive "default" or power-on configuration, a switching fabric should never forward frames received on one port to any other port.

4. It should be possible to send these frames from the forwarding engine to some control plane system for specific processing.  When doing so, the physical port number needs to be associated with the frame.

5. It should be possible for control plane daemons to send frames for transmission on any port, and to that port only, even if that port is part of a larger layer-2 domain.

# Nice to have Functionality

1. As the ACP uses IPsec over IPv6-Link-Layer packets, if a switching fabric has accelerated hardware for IPsec ESP, then it would be desireable if the encapsulation format did not get in the way of doing that.

2. As the ACP forms a private layer-3 Virtual Routing Fabric (VRF) on top of the tunnels, if the switching fabric has accelerated support for this, then it would also be useful to be able to use it.

It is likely that many L2 switching fabrics may not support IPsec ESP, or L3 routing.
It was always the case that the ACP might have to be implemented as a software fabric in a control plane CPU. This is not a significant hurdle, as the ACP is not intended to be used for customer data, only control plane communication, and often only as a last resort.

# Possibilities

There are two things which distinguish LLDP, EAPoL and ISIS traffic from regular traffic.

The most obivous is the EtherType.

LLDP traffic also uses a destination multicast address (01:80:c2:00:00:0e, or 01:80:c2:00:00:03, or 01:80:c2:00:00:00).
The use of this destination address facilitiates transmission of the traffic through unmanaged switches ("dumb ethernet switches"), as well as allowing for seperation of provider and customer traffic in provider bridged (IEEE 802.1ad) situations.

## Just use special destination

There does not appear to be any legitimate use of Ethertype 0x86DD (normal IPv6) with the special multicast destinations listed above.
When IPv6 multicast is used, it is mapped to a destination multicast address that starts with 0x3333.

It would therefore be possible to use the normal encapsulation, but a special destination address.
This would probably occupy a single entry in a multicast destination table for the switch.
On some devices, it may require an entry per physical port. (More data is sought)

## Use another EtherType

Another Ethertype could be registered.  It would behave exactly like 0x86DD, but would be treated differently.
As neither layer-2 nor layer-3 forwarding is desired for this ethertype, it may not be necessary to modify any forwarding engines.
To remind: ACP traffic that does need to be forwarded would first be decapsulated from the IPsec ESP.
At which point the packet would be an IPv6 packet, and it would need to be encapsulated again before forwarded.
So it would be the ESP engine that might need changes.

## Do something with EAPoL

It maybe that the hack which was undesireable for LLDP may be well accepted when done for EAPoL.

# Privacy Considerations

YYY

# Security Considerations

Unclear as yet.


# IANA Considerations

None yet.

# Acknowledgements

Paul Congdon was very helpful in understanding how LLDP was actually processed in production equipment.

# Changelog

Document renamed, focus changed.

--- back

